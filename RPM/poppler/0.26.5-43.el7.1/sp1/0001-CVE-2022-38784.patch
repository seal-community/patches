From 27354e9d9696ee2bc063910a6c9a6b27c5184a52 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Thu, 25 Aug 2022 00:14:22 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for poppler 0.26.5-43.el7.1

This patch fixes:
  CVE-2022-38784

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://git.centos.org/rpms/poppler/tree/5f840c2a452bea2b76fdfeb4e99dcee27aeee9f4
---
 CMakeLists.txt         |  1 +
 goo/GooCheckedOps.h    | 48 ++++++++++++++++++++++++++++++++++++++++++
 poppler/JBIG2Stream.cc |  8 ++++++-
 3 files changed, 56 insertions(+), 1 deletion(-)
 create mode 100644 goo/GooCheckedOps.h

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 02c82ca..f4e33ef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -521,6 +521,7 @@ if(ENABLE_XPDF_HEADERS)
     goo/gfile.h
     goo/FixedPoint.h
     goo/ImgWriter.h
+    goo/GooCheckedOps.h
     goo/GooLikely.h
     goo/gstrtod.h
     goo/grandom.h
diff --git a/goo/GooCheckedOps.h b/goo/GooCheckedOps.h
new file mode 100644
index 0000000..3772bdb
--- /dev/null
+++ b/goo/GooCheckedOps.h
@@ -0,0 +1,36 @@
+//========================================================================
+//
+// GooCheckedOps.h
+//
+// This file is licensed under the GPLv2 or later
+//
+// Copyright (C) 2018 Adam Reichold <adam.reichold@t-online.de>
+// Copyright (C) 2019 LE GARREC Vincent <legarrec.vincent@gmail.com>
+// Copyright (C) 2019, 2020 Albert Astals Cid <aacid@kde.org>
+//
+//========================================================================
+
+#ifndef GOO_CHECKED_OPS_H
+#define GOO_CHECKED_OPS_H
+
+#include <limits>
+
+template<typename T>
+inline bool checkedAssign(long long lz, T *z)
+{
+    if (lz > (std::numeric_limits<T>::max)() || lz < (std::numeric_limits<T>::min)()) {
+        return true;
+    }
+
+    *z = static_cast<T>(lz);
+    return false;
+}
+
+template<typename T>
+inline bool checkedAdd(T x, T y, T *z)
+{
+    const long long lz = static_cast<long long>(x) + static_cast<long long>(y);
+    return checkedAssign(lz, z);
+}
+
+#endif // GOO_CHECKED_OPS_H
diff --git a/poppler/JBIG2Stream.cc b/poppler/JBIG2Stream.cc
index 0695dc5..6107680 100644
--- a/poppler/JBIG2Stream.cc
+++ b/poppler/JBIG2Stream.cc
@@ -37,6 +37,7 @@
 #include <stdlib.h>
 #include <limits.h>
 #include "goo/GooList.h"
+#include "goo/GooCheckedOps.h"
 #include "Error.h"
 #include "JArithmeticDecoder.h"
 #include "JBIG2Stream.h"
@@ -2068,7 +2069,12 @@ void JBIG2Stream::readTextRegionSeg(Guint segNum, GBool imm,
   for (i = 0; i < nRefSegs; ++i) {
     if ((seg = findSegment(refSegs[i]))) {
       if (seg->getType() == jbig2SegSymbolDict) {
-	numSyms += ((JBIG2SymbolDict *)seg)->getSize();
+	      const unsigned int segSize = ((JBIG2SymbolDict *)seg)->getSize();
+        if (checkedAdd(numSyms, segSize, &numSyms)) {
+          error(errSyntaxError, getPos(), "Too many symbols in JBIG2 text region");
+          delete codeTables;
+          return;
+        }
       } else if (seg->getType() == jbig2SegCodeTable) {
 	codeTables->append(seg);
       }
-- 


