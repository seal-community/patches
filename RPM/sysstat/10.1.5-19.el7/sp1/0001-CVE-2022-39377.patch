From e69428c37e7d2919481e9dee05148ec54c3b9b19 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Sun, 17 Dec 2023 17:39:58 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for sysstat 10.1.5-19.el7

This patch fixes:
  CVE-2022-39377

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://git.centos.org/rpms/sysstat/tree/ab5c3c64d94c607cdec628a2795217f27c3fadb4
---
 common.c    | 24 ++++++++++++++++++++++++
 common.h    |  2 ++
 sa_common.c |  4 ++++
 3 files changed, 30 insertions(+)

diff --git a/common.c b/common.c
index d185a9a..3182008 100644
--- a/common.c
+++ b/common.c
@@ -29,6 +29,7 @@
 #include <sys/types.h>
 #include <dirent.h>
 #include <ctype.h>
+#include <limits.h>
 #include <libgen.h>
 
 #include "version.h"
diff --git a/common.c b/common.c
index 896fddc..d185a9a 100644
--- a/common.c
+++ b/common.c
@@ -921,3 +921,27 @@ char *get_pretty_name_from_persistent(char *persistent)
 
 	return pretty;
 }
+
+/*
+ ***************************************************************************
+ * Check if the multiplication of the 3 values may be greater than UINT_MAX.
+ *
+ * IN:
+ * @val1	First value.
+ * @val2	Second value.
+ * @val3	Third value.
+ ***************************************************************************
+ */
+void check_overflow(size_t val1, size_t val2, size_t val3)
+{
+	if ((unsigned long long) val1 *
+	    (unsigned long long) val2 *
+	    (unsigned long long) val3 > UINT_MAX) {
+#ifdef DEBUG
+		fprintf(stderr, "%s: Overflow detected (%llu). Aborting...\n",
+			__FUNCTION__,
+			(unsigned long long) val1 * (unsigned long long) val2 *	(unsigned long long) val3);
+#endif
+	exit(4);
+	}
+}
diff --git a/common.h b/common.h
index e78c8de..12174dd 100644
--- a/common.h
+++ b/common.h
@@ -172,6 +172,8 @@ struct ext_disk_stats {
 extern void
 	compute_ext_disk_stats(struct stats_disk *, struct stats_disk *,
 			       unsigned long long, struct ext_disk_stats *);
+void 
+	check_overflow(size_t, size_t, size_t);
 extern int
 	count_bits(void *, int);
 extern int
diff --git a/sa_common.c b/sa_common.c
index df7d38d..a9194ad 100644
--- a/sa_common.c
+++ b/sa_common.c
@@ -81,6 +81,10 @@ void allocate_structures(struct activity *act[])
 
 	for (i = 0; i < NR_ACT; i++) {
 		if (act[i]->nr > 0) {
+
+			/* Look for a possible overflow */
+			check_overflow((size_t) act[i]->msize, (size_t) act[i]->nr, (size_t) act[i]->nr2);
+
 			for (j = 0; j < 3; j++) {
 				SREALLOC(act[i]->buf[j], void, act[i]->msize * act[i]->nr * act[i]->nr2);
 			}
-- 


