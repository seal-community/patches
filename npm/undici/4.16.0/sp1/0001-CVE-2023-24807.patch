From 39b36f3ea90751bbe29a3c458de8914460e9d064 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Wed, 24 May 2023 14:27:04 +0300
Subject: [PATCH 1/1] Seal Security Hotfix for undici 4.16.0

This patch fixes:
  CVE-2023-24807

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/nodejs/undici/tree/v4.16.0
---
 lib/fetch/headers.js  | 10 ++++++----
 test/fetch/headers.js | 11 +++++++++++
 2 files changed, 17 insertions(+), 4 deletions(-)

diff --git a/lib/fetch/headers.js b/lib/fetch/headers.js
index 7a59f15..7624b05 100644
--- a/lib/fetch/headers.js
+++ b/lib/fetch/headers.js
@@ -41,10 +41,12 @@ function normalizeAndValidateHeaderValue (name, value) {
   if (value === undefined) {
     throw new TypeError(value, name)
   }
-  const normalizedHeaderValue = `${value}`.replace(
-    /^[\n\t\r\x20]+|[\n\t\r\x20]+$/g,
-    ''
-  )
+  // Trimming the end with `.replace()` and a RegExp is typically subject to
+  // ReDoS. This is safer and faster.
+  let i = value.length
+  while (/[\r\n\t ]/.test(value.charAt(--i)));
+  const normalizedHeaderValue = value.slice(0, i + 1).replace(/^[\r\n\t ]+/, '')
+
   validateHeaderValue(name, normalizedHeaderValue)
   return normalizedHeaderValue
 }
diff --git a/test/fetch/headers.js b/test/fetch/headers.js
index 044e4d1..5edec80 100644
--- a/test/fetch/headers.js
+++ b/test/fetch/headers.js
@@ -636,6 +636,17 @@ tap.test('request-no-cors guard', (t) => {
   t.end()
 })
 
+tap.test('headers that might cause a ReDoS', (t) => {
+  t.doesNotThrow(() => {
+    // This test will time out if the ReDoS attack is successful.
+    const headers = new Headers()
+    const attack = 'a' + '\t'.repeat(500_000) + '\ta'
+    headers.append('fhqwhgads', attack)
+  })
+
+  t.end()
+})
+
 tap.test('request guard', (t) => {
   const headers = new Headers(forbiddenHeaderNames.map(k => [k, 'v']))
   headers[kGuard] = 'request'
-- 
2.39.2 (Apple Git-143)

