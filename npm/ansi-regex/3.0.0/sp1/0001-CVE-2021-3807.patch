From cfa0f8cedab2f9d4f65c25384e18b836ce601e67 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Tue, 6 Jun 2023 16:13:33 +0300
Subject: [PATCH 1/1] Seal Security Hotfix for ansi-regex 3.0.0

This patch fixes:
  CVE-2021-3807

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/chalk/ansi-regex/tree/v3.0.0
---
 index.js | 2 +-
 test.js  | 5 +++++
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/index.js b/index.js
index c4aaecf..93f162c 100644
--- a/index.js
+++ b/index.js
@@ -2,7 +2,7 @@
 
 module.exports = () => {
 	const pattern = [
-		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[a-zA-Z\\d]*)*)?\\u0007)',
+		'[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[a-zA-Z\\d]*)*)?\\u0007)',
 		'(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))'
 	].join('|');
 
diff --git a/test.js b/test.js
index 05a448b..0bb7599 100644
--- a/test.js
+++ b/test.js
@@ -37,6 +37,11 @@ test('match clear screen in a string', t => {
 	t.is('foo\u001B[2Jbar'.match(m())[0], '\u001B[2J');
 });
 
+test('CVE-2021-3807', t => {
+	const attackStr = '\u001B[' + ';'.repeat(10000 * 10000);
+	t.notRegex(attackStr, m());
+});
+
 // Testing against extended codes (excluding codes ending in 0-9)
 for (const codeSet of Object.keys(ansiCodes)) {
 	for (const el of ansiCodes[codeSet]) {
-- 
2.39.2 (Apple Git-143)

