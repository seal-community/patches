From ebf5581520f818ade6a0fdf674e2309e040f19c0 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Sun, 14 Jan 2024 11:47:47 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for @babel/traverse 7.18.8

This patch fixes:
  CVE-2023-45133

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/babel/babel/tree/v7.18.8
---
 packages/babel-traverse/src/path/evaluation.ts | 7 +++++--
 packages/babel-traverse/test/evaluation.js     | 6 +++++-
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/packages/babel-traverse/src/path/evaluation.ts b/packages/babel-traverse/src/path/evaluation.ts
index 0accebc030..9154682b26 100644
--- a/packages/babel-traverse/src/path/evaluation.ts
+++ b/packages/babel-traverse/src/path/evaluation.ts
@@ -388,8 +388,11 @@ function _evaluate(path: NodePath, state: State): any {
         !isInvalidMethod(property.node.name)
       ) {
         context = global[object.node.name];
-        // @ts-ignore property may not exist in context object
-        func = context[property.node.name];
+        const key = property.node.name;
+        // TODO(Babel 8): Use Object.hasOwn
+        if (Object.hasOwnProperty.call(context, key)) {
+          func = context[key as keyof typeof context];
+        }
       }
 
       // "abc".charCodeAt(4)
diff --git a/packages/babel-traverse/test/evaluation.js b/packages/babel-traverse/test/evaluation.js
index ab0fb46413..e226908d59 100644
--- a/packages/babel-traverse/test/evaluation.js
+++ b/packages/babel-traverse/test/evaluation.js
@@ -118,7 +118,11 @@ describe("evaluation", function () {
     expect(eval_member_expr.value).toBe(2);
     expect(eval_invalid_call.confident).toBe(false);
   });
-
+  it("should not evaluate inherited methods", function () {
+    const path = getPath("Math.hasOwnProperty('min')");
+    const evalResult = path.get("body.0.expression").evaluate();
+    expect(evalResult.confident).toBe(false);
+  });
   it("should not deopt vars in different scope", function () {
     const input =
       "var a = 5; function x() { var a = 5; var b = a + 1; } var b = a + 2";
-- 


