From 3d94cfbba34acf1211a1e8ee52690181a41d2759 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Wed, 24 Jan 2024 15:22:23 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for @babel/traverse 7.17.3

This patch fixes:
  CVE-2023-45133

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/babel/babel/tree/v7.17.3
---
 packages/babel-traverse/src/path/evaluation.ts | 6 +++++-
 packages/babel-traverse/test/evaluation.js     | 6 +++++-
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/packages/babel-traverse/src/path/evaluation.ts b/packages/babel-traverse/src/path/evaluation.ts
index 89541ccd78..8841211aa6 100644
--- a/packages/babel-traverse/src/path/evaluation.ts
+++ b/packages/babel-traverse/src/path/evaluation.ts
@@ -363,7 +363,11 @@ function _evaluate(path: NodePath, state) {
         INVALID_METHODS.indexOf(property.node.name) < 0
       ) {
         context = global[object.node.name];
-        func = context[property.node.name];
+        const key = property.node.name;
+        // TODO(Babel 8): Use Object.hasOwn
+        if (Object.hasOwnProperty.call(context, key)) {
+          func = context[key as keyof typeof context];
+        }
       }
 
       // "abc".charCodeAt(4)
diff --git a/packages/babel-traverse/test/evaluation.js b/packages/babel-traverse/test/evaluation.js
index ba3e99a7bf..433b733ab0 100644
--- a/packages/babel-traverse/test/evaluation.js
+++ b/packages/babel-traverse/test/evaluation.js
@@ -226,7 +226,11 @@ describe("evaluation", function () {
     expect(result.deopt.type).toBe("Identifier");
     expect(result.deopt.node.name).toBe("foo");
   });
-
+  it("should not evaluate inherited methods", function () {
+    const path = getPath("Math.hasOwnProperty('min')");
+    const evalResult = path.get("body.0.expression").evaluate();
+    expect(evalResult.confident).toBe(false);
+  });
   it("sets deopt properly when confident after evaluating multiple expressions", () => {
     const ast = parse(`
       const foo = 'foo';
-- 


