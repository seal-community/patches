From 4dccfd650b0f021ddff08875aaa8bb9b2e4286d1 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Tue, 13 Feb 2024 11:18:25 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for set-value 0.4.3

This patch fixes:
  CVE-2019-10747
  CVE-2021-23440

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/jonschlinkert/set-value/tree/0.4.3
---
 index.js |  6 ++++--
 test.js  | 12 ++++++++++++
 2 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/index.js b/index.js
index e51ece5..af0f8bb 100644
--- a/index.js
+++ b/index.js
@@ -25,7 +25,7 @@ module.exports = function(obj, path, val) {
     return obj;
   }
 
-  var segs = path.split('.');
+  var segs = path.split('.').filter(isValidKey);
   var len = segs.length, i = -1;
   var res = obj;
   var last;
@@ -60,4 +60,6 @@ module.exports = function(obj, path, val) {
   }
   return res;
 };
-
+function isValidKey(key) {
+  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';
+}
diff --git a/test.js b/test.js
index de41962..9373e87 100644
--- a/test.js
+++ b/test.js
@@ -157,3 +157,15 @@ describe('escaping', function() {
     assert.deepEqual(obj2, { 'e.f': { 'g.h.i': { j: 1 } } });
   });
 });
+
+describe('pollution', function() {
+  it('should not allow to pollut object', function() {
+    set({}, ['__proto__', 'polluted'], 'yes');    
+    assert.equal({}.polluted, undefined);
+  });
+
+  it('should not allow to pollut inner keys of object', function() {
+    set({}, ['constructor.prototype.exploit', 'polluted'], 'yes');
+    assert.equal({}.exploit, undefined);
+  });
+});
-- 