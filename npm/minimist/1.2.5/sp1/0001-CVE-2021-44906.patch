From 5e88971ef2565a3afcbfa40ef917970f578c1209 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Tue, 12 Mar 2024 15:06:18 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for minimist 1.2.5

This patch fixes:
  CVE-2021-44906

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/minimistjs/minimist/tree/v1.2.5
---
 index.js      |  8 ++++++--
 test/proto.js | 16 ++++++++++++++++
 2 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/index.js b/index.js
index d2afe5e..7980f4f 100644
--- a/index.js
+++ b/index.js
@@ -70,7 +70,7 @@ module.exports = function (args, opts) {
         var o = obj;
         for (var i = 0; i < keys.length-1; i++) {
             var key = keys[i];
-            if (key === '__proto__') return;
+            if (isConstructorOrProto(o, key)) return;
             if (o[key] === undefined) o[key] = {};
             if (o[key] === Object.prototype || o[key] === Number.prototype
                 || o[key] === String.prototype) o[key] = {};
@@ -79,7 +79,7 @@ module.exports = function (args, opts) {
         }
 
         var key = keys[keys.length - 1];
-        if (key === '__proto__') return;
+        if (isConstructorOrProto(o, key)) return;
         if (o === Object.prototype || o === Number.prototype
             || o === String.prototype) o = {};
         if (o === Array.prototype) o = [];
@@ -243,3 +243,7 @@ function isNumber (x) {
     return /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(x);
 }
 
+
+function isConstructorOrProto (obj, key) {
+    return (key === 'constructor' && typeof obj[key] === 'function') || key === '__proto__';
+}
diff --git a/test/proto.js b/test/proto.js
index 8649107..847e542 100644
--- a/test/proto.js
+++ b/test/proto.js
@@ -42,3 +42,19 @@ test('proto pollution (constructor)', function (t) {
     t.equal(argv.y, undefined);
     t.end();
 });
+
+
+test('proto pollution (constructor function)', function (t) {
+    var argv = parse(['--_.concat.constructor.prototype.y', '123']);
+    function fnToBeTested() {}
+    t.equal(fnToBeTested.y, undefined);
+    t.equal(argv.y, undefined);
+    t.end();
+});
+
+test('proto pollution (constructor function) snyk', function (t) {
+    var argv = parse('--_.constructor.constructor.prototype.foo bar'.split(' '));
+    t.equal((function(){}).foo, undefined);
+    t.equal(argv.y, undefined);
+    t.end();
+})
\ No newline at end of file
-- 


