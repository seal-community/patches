From 44055420ea213dd6ec7bf88a42d8d6ca5acaae41 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Mon, 12 Feb 2024 16:02:00 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for set-getter 0.1.0

This patch fixes:
  CVE-2021-25949

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/doowb/set-getter/tree/5bc2750fe1c3db9651d936131be187744111378d
---
 index.js | 10 ++++++++--
 test.js  | 34 ++++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+), 2 deletions(-)

diff --git a/index.js b/index.js
index ce9a6a0..42f1d13 100644
--- a/index.js
+++ b/index.js
@@ -9,6 +9,10 @@
 
 var toPath = require('to-object-path');
 
+function isValidKey(key) {
+  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';
+}
+
 /**
  * Defines a getter function on an object using property path notation.
  *
@@ -40,11 +44,13 @@ function setGetter(obj, prop, getter) {
 
 function define(obj, prop, getter) {
   if (!~prop.indexOf('.')) {
-    defineProperty(obj, prop, getter);
+    if (isValidKey(prop)) {
+      defineProperty(obj, prop, getter);
+    }
     return obj;
   }
 
-  var keys = prop.split('.');
+  var keys = prop.split('.').filter(isValidKey);
   var last = keys.pop();
   var target = obj;
   var key;
diff --git a/test.js b/test.js
index ece8350..0711806 100644
--- a/test.js
+++ b/test.js
@@ -94,4 +94,38 @@ describe('set-getter', function() {
     assert.equal(obj.foo.bar, 'beep');
     assert.equal(obj.foo.baz, 'boop');
   });
+
+  it('should not pollute the prototype when using dot notation', function() {
+    var obj = {};
+
+    assert(!('polluted' in {}));
+    assert(!('polluted' in obj));
+
+    getter(obj, '__proto__.polluted', function() {
+      return true;
+    });
+
+    assert(!('polluted' in {}));
+    assert('polluted' in obj);
+
+    assert({}.polluted !== true);
+    assert(obj.polluted === true);
+  });
+
+  it('should not pollute the prototype when using array notation', function() {
+    var obj = {};
+
+    assert(!('polluted' in {}));
+    assert(!('polluted' in obj));
+
+    getter(obj, ['__proto__', 'polluted'], function() {
+      return true;
+    });
+
+    assert(!('polluted' in {}));
+    assert('polluted' in obj);
+
+    assert({}.polluted !== true);
+    assert(obj.polluted === true);
+  });
 });
-- 


