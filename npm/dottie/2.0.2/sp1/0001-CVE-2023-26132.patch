From 957f2d9c3c66736edfb53353e53996a385f76895 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Tue, 16 Jan 2024 13:06:28 +0200
Subject: [PATCH 1/1] Seal Security Hotfix for dottie 2.0.2

This patch fixes:
  CVE-2023-26132

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/mickhansen/dottie.js/tree/v2.0.2
---
 dottie.js              |  5 +++++
 test/set.test.js       |  7 +++++++
 test/transform.test.js | 11 +++++++++++
 3 files changed, 23 insertions(+)

diff --git a/dottie.js b/dottie.js
index 225d5eb..e8273dd 100644
--- a/dottie.js
+++ b/dottie.js
@@ -73,6 +73,8 @@
   Dottie.set = function(object, path, value, options) {
     var pieces = Array.isArray(path) ? path : path.split('.'), current = object, piece, length = pieces.length;
 
+    if (pieces[0] === '__proto__') return;
+
     if (typeof current !== 'object') {
         throw new Error('Parent is not an object.');
     }
@@ -137,6 +139,9 @@
 
       if (key.indexOf(options.delimiter) !== -1) {
         pieces = key.split(options.delimiter);
+
+        if (pieces[0] === '__proto__') break;
+
         piecesLength = pieces.length;
         current = transformed;
 
diff --git a/test/set.test.js b/test/set.test.js
index 41c36e7..0786866 100644
--- a/test/set.test.js
+++ b/test/set.test.js
@@ -45,4 +45,11 @@ describe("dottie.set", function () {
     });
     expect(data.foo.bar.baz).to.equal('someValue');
   });
+  it('should not attempt to set __proto__', function () {
+    var data = {};
+
+    dottie.set(data, '__proto__.pollution', 'polluted');
+
+    expect(data.__proto__.pollution).to.be.undefined;
+  });
 });
\ No newline at end of file
diff --git a/test/transform.test.js b/test/transform.test.js
index 461b25b..12ddb07 100644
--- a/test/transform.test.js
+++ b/test/transform.test.js
@@ -145,4 +145,15 @@ describe("dottie.transform", function () {
     expect(transformed.user.location.city).to.equal('Zanzibar City');
     expect(transformed.project.title).to.equal('dottie');
   });
+  it("should guard against prototype pollution", function () {
+    var values = {
+      'user.name': 'John Doe',
+      '__proto__.pollution': 'pollution'
+    };
+
+    var transformed = dottie.transform(values);
+    expect(transformed.user).not.to.equal(undefined);
+    expect(transformed.user.name).to.equal('John Doe');
+    expect(transformed.__proto__.pollution).to.be.undefined;
+  });
 });
-- 


