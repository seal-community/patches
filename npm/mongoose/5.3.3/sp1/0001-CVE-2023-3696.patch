From b690c4e543c0c28c804719f39527ca0bf4cd4bd8 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Wed, 20 Sep 2023 18:15:52 +0300
Subject: [PATCH 1/3] Seal Security Hotfix for mongoose 5.3.3

This patch fixes:
  CVE-2023-3696

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/Automattic/mongoose/tree/5.3.3
---
 lib/document.js       |  4 ++++
 test/document.test.js | 19 +++++++++++++++++++
 2 files changed, 23 insertions(+)

diff --git a/lib/document.js b/lib/document.js
index d97be8829..191efb44c 100644
--- a/lib/document.js
+++ b/lib/document.js
@@ -486,6 +486,10 @@ function init(self, obj, doc, prefix) {
 
   function _init(index) {
     i = keys[index];
+    // avoid prototype pollution
+    if (i === '__proto__' || i === 'constructor') {
+      return;
+    }
     path = prefix + i;
     schema = self.schema.path(path);
 
diff --git a/test/document.test.js b/test/document.test.js
index a3d53f071..432d8aca0 100644
--- a/test/document.test.js
+++ b/test/document.test.js
@@ -6243,4 +6243,23 @@ describe('document', function() {
       assert.ok(fromDb.error.errors.name);
     });
   });
+  it('avoids prototype pollution on init', function() {
+    const Example = db.model('Example', new Schema({ hello: String }));
+
+    return co(function*() {
+      const example = yield new Example({ hello: 'world!' }).save();
+      yield Example.findByIdAndUpdate(example._id, {
+        $rename: {
+          hello: '__proto__.polluted'
+        }
+      });
+
+      // this is what causes the pollution
+      yield Example.find();
+
+      const test = {};
+      assert.strictEqual(test.polluted, undefined);
+      assert.strictEqual(Object.prototype.polluted, undefined);
+    });
+  });
 });
-- 
2.39.3 (Apple Git-145)

