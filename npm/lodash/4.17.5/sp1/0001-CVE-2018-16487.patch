From 0d84680b6cfedaea000317dcf7bb29211cd7feaf Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Sun, 27 Aug 2023 18:29:32 +0300
Subject: [PATCH 1/6] Seal Security Hotfix for lodash 4.17.5

This patch fixes:
  CVE-2018-16487

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/lodash/lodash/tree/4.17.5
---
 lodash.js    | 16 +++++++++++-----
 test/test.js | 17 +++++++++++++++--
 2 files changed, 26 insertions(+), 7 deletions(-)

diff --git a/lodash.js b/lodash.js
index 310332608..35dba26a7 100644
--- a/lodash.js
+++ b/lodash.js
@@ -1217,7 +1217,7 @@
   }
 
   /**
-   * Gets the value at `key`, unless `key` is "__proto__".
+   * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
    *
    * @private
    * @param {Object} object The object to query.
@@ -1225,9 +1225,15 @@
    * @returns {*} Returns the property value.
    */
   function safeGet(object, key) {
-    return key == '__proto__'
-      ? undefined
-      : object[key];
+    if (key === 'constructor' && typeof object[key] === 'function') {
+      return;
+    }
+
+    if (key == '__proto__') {
+      return;
+    }
+
+    return object[key];
   }
 
   /**
@@ -3687,7 +3693,7 @@
           if (isArguments(objValue)) {
             newValue = toPlainObject(objValue);
           }
-          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
+          else if (!isObject(objValue) || isFunction(objValue)) {
             newValue = initCloneObject(srcValue);
           }
         }
diff --git a/test/test.js b/test/test.js
index c88e0fda9..2cd13d0b0 100644
--- a/test/test.js
+++ b/test/test.js
@@ -4712,6 +4712,17 @@
       var actual = _.defaultsDeep({ 'a': ['abc'] }, { 'a': 'abc' });
       assert.deepEqual(actual.a, ['abc']);
     });
+
+    QUnit.test('should not indirectly merge `Object` properties', function(assert) {
+      assert.expect(1);
+
+      _.defaultsDeep({}, { 'constructor': { 'a': 1 } });
+
+      var actual = 'a' in Object;
+      delete Object.a;
+
+      assert.notOk(actual);
+    });
   }());
 
   /*--------------------------------------------------------------------------*/
@@ -14905,14 +14905,14 @@
 
       var source1 = { 'a': function() {} },
           source2 = { 'a': { 'b': 2 } },
+          expected = { 'a': { 'b': 2 } },
           actual = _.merge({}, source1, source2);
 
-      assert.deepEqual(actual, { 'a': { 'b': 2 } });
+      assert.deepEqual(actual, expected);
+      assert.notOk('b' in source1.a);
 
       actual = _.merge(source1, source2);
-
-      assert.strictEqual(typeof actual.a, 'function');
-      assert.strictEqual(actual.a.b, 2);
+      assert.deepEqual(actual, expected);
     });
 
     QUnit.test('should merge onto non-plain `object` values', function(assert) {
-- 


