From 0d016f4ce005d8bb0ea32bc72d3203e5f7d9dd03 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Thu, 24 Aug 2023 20:00:32 +0300
Subject: [PATCH 2/4] Seal Security Hotfix for lodash 4.17.11

This patch fixes:
  CVE-2020-8203
  SNYK-JS-LODASH-608086

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/lodash/lodash/tree/4.17.11
---
 lodash.js    |  4 ++++
 test/test.js | 33 +++++++++++++++++++++++++++++++++
 2 files changed, 37 insertions(+)

diff --git a/lodash.js b/lodash.js
index 7329ba4e8..4643b5aa0 100644
--- a/lodash.js
+++ b/lodash.js
@@ -4019,6 +4019,10 @@
         var key = toKey(path[index]),
             newValue = value;
 
+        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
+          return object;
+        }
+
         if (index != lastIndex) {
           var objValue = nested[key];
           newValue = customizer ? customizer(objValue, key, nested) : undefined;
diff --git a/test/test.js b/test/test.js
index d07ad2d62..463b9dfe4 100644
--- a/test/test.js
+++ b/test/test.js
@@ -25782,6 +25782,39 @@
     });
   });
 
+  // zipObjectDeep prototype pollution
+  ['__proto__', 'constructor', 'prototype'].forEach(function (keyToTest) {
+    QUnit.test('zipObjectDeep is not setting ' + keyToTest + ' on global', function (assert) {
+      assert.expect(1);
+
+      _.zipObjectDeep([keyToTest + '.a'], ['newValue']);
+      // Can't access plain `a` as it's not defined and test fails
+      assert.notEqual(root['a'], 'newValue');
+    });
+
+    QUnit.test('zipObjectDeep is not overwriting ' + keyToTest + ' on vars', function (assert) {
+      assert.expect(3);
+
+      const b = 'oldValue'
+      _.zipObjectDeep([keyToTest + '.b'], ['newValue']);
+      assert.equal(b, 'oldValue');
+      assert.notEqual(root['b'], 'newValue');
+
+      // ensure nothing was created
+      assert.notOk(root['b']);
+    });
+
+    QUnit.test('zipObjectDeep is not overwriting global.' + keyToTest, function (assert) {
+      assert.expect(2);
+
+      _.zipObjectDeep([root + '.' + keyToTest + '.c'], ['newValue']);
+      assert.notEqual(root['c'], 'newValue');
+
+      // ensure nothing was created
+      assert.notOk(root['c']);
+    });
+  });
+
   /*--------------------------------------------------------------------------*/
 
   QUnit.module('lodash.zipWith');
-- 


