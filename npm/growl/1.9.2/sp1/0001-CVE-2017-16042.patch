From ccaba627175c3818e1660c44de368660b3a3f374 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Wed, 20 Sep 2023 17:27:24 +0300
Subject: [PATCH 1/1] Seal Security Hotfix for growl 1.9.2

This patch fixes:
  CVE-2017-16042

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/tj/node-growl/tree/v1.9.2
---
 lib/growl.js | 235 ++++++++++++++++++++++++++++-----------------------
 1 file changed, 131 insertions(+), 104 deletions(-)

diff --git a/lib/growl.js b/lib/growl.js
index 719b5af..cc3734d 100644
--- a/lib/growl.js
+++ b/lib/growl.js
@@ -4,12 +4,11 @@
  * Module dependencies.
  */
 
-var exec = require('child_process').exec
+var spawn = require('child_process').spawn
   , fs = require('fs')
   , path = require('path')
   , exists = fs.existsSync || path.existsSync
   , os = require('os')
-  , quote = JSON.stringify
   , cmd;
 
 function which(name) {
@@ -22,99 +21,101 @@ function which(name) {
   }
 }
 
-switch(os.type()) {
-  case 'Darwin':
-    if (which('terminal-notifier')) {
-      cmd = {
-          type: "Darwin-NotificationCenter"
-        , pkg: "terminal-notifier"
-        , msg: '-message'
-        , title: '-title'
-        , subtitle: '-subtitle'
-        , icon: '-appIcon'
-        , sound:  '-sound'
-        , url: '-open'
-        , priority: {
-              cmd: '-execute'
-            , range: []
+function setup_cmd() {
+  switch(os.type()) {
+    case 'Darwin':
+      if (which('terminal-notifier')) {
+        cmd = {
+            type: "Darwin-NotificationCenter"
+          , pkg: "terminal-notifier"
+          , msg: '-message'
+          , title: '-title'
+          , subtitle: '-subtitle'
+          , icon: '-appIcon'
+          , sound:  '-sound'
+          , url: '-open'
+          , priority: {
+                cmd: '-execute'
+              , range: []
+            }
+        };
+      } else {
+        cmd = {
+            type: "Darwin-Growl"
+          , pkg: "growlnotify"
+          , msg: '-m'
+          , sticky: '--sticky'
+          , priority: {
+                cmd: '--priority'
+              , range: [
+                  -2
+                , -1
+                , 0
+                , 1
+                , 2
+                , "Very Low"
+                , "Moderate"
+                , "Normal"
+                , "High"
+                , "Emergency"
+              ]
+            }
+        };
+      }
+      break;
+    case 'Linux':
+      if (which('growl')) {
+        cmd = {
+            type: "Linux-Growl"
+          , pkg: "growl"
+          , msg: '-m'
+          , title: '-title'
+          , subtitle: '-subtitle'
+          , host: {
+              cmd: '-H'
+            , hostname: '192.168.33.1'
           }
-      };
-    } else {
+        };
+      } else {
+        cmd = {
+            type: "Linux"
+          , pkg: "notify-send"
+          , msg: ''
+          , sticky: '-t 0'
+          , icon: '-i'
+          , priority: {
+              cmd: '-u'
+            , range: [
+                "low"
+              , "normal"
+              , "critical"
+            ]
+          }
+        };
+      }
+      break;
+    case 'Windows_NT':
       cmd = {
-          type: "Darwin-Growl"
+          type: "Windows"
         , pkg: "growlnotify"
-        , msg: '-m'
-        , sticky: '--sticky'
+        , msg: ''
+        , sticky: '/s:true'
+        , title: '/t:'
+        , icon: '/i:'
+        , url: '/cu:'
         , priority: {
-              cmd: '--priority'
+              cmd: '/p:'
             , range: [
                 -2
               , -1
               , 0
               , 1
               , 2
-              , "Very Low"
-              , "Moderate"
-              , "Normal"
-              , "High"
-              , "Emergency"
             ]
           }
       };
-    }
-    break;
-  case 'Linux':
-    if (which('growl')) {
-      cmd = {
-          type: "Linux-Growl"
-        , pkg: "growl"
-        , msg: '-m'
-        , title: '-title'
-        , subtitle: '-subtitle'
-        , host: {
-            cmd: '-H'
-          , hostname: '192.168.33.1'
-        }
-      };
-    } else {
-      cmd = {
-          type: "Linux"
-        , pkg: "notify-send"
-        , msg: ''
-        , sticky: '-t 0'
-        , icon: '-i'
-        , priority: {
-            cmd: '-u'
-          , range: [
-              "low"
-            , "normal"
-            , "critical"
-          ]
-        }
-      };
-    }
-    break;
-  case 'Windows_NT':
-    cmd = {
-        type: "Windows"
-      , pkg: "growlnotify"
-      , msg: ''
-      , sticky: '/s:true'
-      , title: '/t:'
-      , icon: '/i:'
-      , url: '/cu:'
-      , priority: {
-            cmd: '/p:'
-          , range: [
-              -2
-            , -1
-            , 0
-            , 1
-            , 2
-          ]
-        }
-    };
-    break;
+      break;
+  }
 }
 
 /**
@@ -167,6 +168,8 @@ function growl(msg, options, fn) {
     , options = options || {}
     , fn = fn || function(){};
 
+  setup_cmd();
+
   if (options.exec) {
     cmd = {
         type: "Custom"
@@ -189,18 +192,18 @@ function growl(msg, options, fn) {
         flag = flag || /^png|gif|jpe?g$/.test(ext) && 'image'
         flag = flag || ext && (image = ext) && 'icon'
         flag = flag || 'icon'
-        args.push('--' + flag, quote(image))
+        args.push('--' + flag, image)
         break;
       case 'Darwin-NotificationCenter':
-        args.push(cmd.icon, quote(image));
+        args.push(cmd.icon, image);
         break;
       case 'Linux':
-        args.push(cmd.icon, quote(image));
+        args.push(cmd.icon, image);
         // libnotify defaults to sticky, set a hint for transient notifications
         if (!options.sticky) args.push('--hint=int:transient:1');
         break;
       case 'Windows':
-        args.push(cmd.icon + quote(image));
+        args.push(cmd.icon + image);
         break;
     }
   }
@@ -230,61 +233,85 @@ function growl(msg, options, fn) {
   switch(cmd.type) {
     case 'Darwin-Growl':
       args.push(cmd.msg);
-      args.push(quote(msg).replace(/\\n/g, '\n'));
-      if (options.title) args.push(quote(options.title));
+      args.push(msg.replace(/\\n/g, '\n'));
+      if (options.title) args.push(options.title);
       break;
     case 'Darwin-NotificationCenter':
       args.push(cmd.msg);
-      var stringifiedMsg = quote(msg);
+      var stringifiedMsg = msg;
       var escapedMsg = stringifiedMsg.replace(/\\n/g, '\n');
       args.push(escapedMsg);
       if (options.title) {
         args.push(cmd.title);
-        args.push(quote(options.title));
+        args.push(options.title);
       }
       if (options.subtitle) {
         args.push(cmd.subtitle);
-        args.push(quote(options.subtitle));
+        args.push(options.subtitle);
       }
       if (options.url) {
         args.push(cmd.url);
-        args.push(quote(options.url));
+        args.push(options.url);
       }
       break;
     case 'Linux-Growl':
       args.push(cmd.msg);
-      args.push(quote(msg).replace(/\\n/g, '\n'));
-      if (options.title) args.push(quote(options.title));
+      args.push(msg.replace(/\\n/g, '\n'));
+      if (options.title) args.push(options.title);
       if (cmd.host) {
         args.push(cmd.host.cmd, cmd.host.hostname)
       }
       break;
     case 'Linux':
       if (options.title) {
-        args.push(quote(options.title));
+        args.push(options.title);
         args.push(cmd.msg);
-        args.push(quote(msg).replace(/\\n/g, '\n'));
+        args.push(msg.replace(/\\n/g, '\n'));
       } else {
-        args.push(quote(msg).replace(/\\n/g, '\n'));
+        args.push(msg.replace(/\\n/g, '\n'));
       }
       break;
     case 'Windows':
-      args.push(quote(msg).replace(/\\n/g, '\n'));
-      if (options.title) args.push(cmd.title + quote(options.title));
-      if (options.url) args.push(cmd.url + quote(options.url));
+      args.push(msg.replace(/\\n/g, '\n'));
+      if (options.title) args.push(cmd.title + options.title);
+      if (options.url) args.push(cmd.url + options.url);
       break;
     case 'Custom':
       args[0] = (function(origCommand) {
         var message = options.title
           ? options.title + ': ' + msg
           : msg;
-        var command = origCommand.replace(/(^|[^%])%s/g, '$1' + quote(message));
-        if (command === origCommand) args.push(quote(message));
+        var command = origCommand.replace(/(^|[^%])%s/g, '$1' + message);
+        var split_cmd = command.split(' ');
+        if (split_cmd.length > 1){
+          command = split_cmd.shift();
+          args.push.apply(args, split_cmd);
+        }
+        if (origCommand.indexOf('%s') < 0) {
+          args.push(message);
+        }
         return command;
       })(args[0]);
       break;
   }
+  var cmd_to_exec = args.shift();
 
-  // execute
-  exec(args.join(' '), fn);
+  var child = spawn(cmd_to_exec, args);
+  var out = ''
+  var err = '';
+
+  child.stdout.on('data', function(data) {
+    out += data;
+  });
+
+  child.stderr.on('data', function(data) {
+    err += data;
+  });
+
+  child.on('close', function(code) {
+    var error = code === 0 ?  null : code;
+    if (typeof fn === 'function') {
+      fn(error, out, err);
+    }
+  });
 };
-- 
2.39.3

