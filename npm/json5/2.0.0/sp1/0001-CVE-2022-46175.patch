From 2fc17ab05f2c918f401052a730e3ebf7423c4978 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Wed, 14 Jun 2023 15:25:37 +0300
Subject: [PATCH 1/1] Seal Security Hotfix for json5 2.0.0

This patch fixes:
  CVE-2022-46175

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/json5/json5/tree/v2.0.0
---
 lib/parse.js  | 41 ++++++++++++++++++++++++++++++++++-------
 test/parse.js |  7 +++++++
 2 files changed, 41 insertions(+), 7 deletions(-)

diff --git a/lib/parse.js b/lib/parse.js
index c01646f..da2078a 100644
--- a/lib/parse.js
+++ b/lib/parse.js
@@ -42,12 +42,34 @@ module.exports = function parse (text, reviver) {
 function internalize (holder, name, reviver) {
     const value = holder[name]
     if (value != null && typeof value === 'object') {
-        for (const key in value) {
-            const replacement = internalize(value, key, reviver)
-            if (replacement === undefined) {
-                delete value[key]
-            } else {
-                value[key] = replacement
+        if (Array.isArray(value)) {
+            for (let i = 0; i < value.length; i++) {
+                const key = String(i)
+                const replacement = internalize(value, key, reviver)
+                if (replacement === undefined) {
+                    delete value[key]
+                } else {
+                    Object.defineProperty(value, key, {
+                        value: replacement,
+                        writable: true,
+                        enumerable: true,
+                        configurable: true,
+                    })
+                }
+            }
+        } else {
+            for (const key in value) {
+                const replacement = internalize(value, key, reviver)
+                if (replacement === undefined) {
+                    delete value[key]
+                } else {
+                    Object.defineProperty(value, key, {
+                        value: replacement,
+                        writable: true,
+                        enumerable: true,
+                        configurable: true,
+                    })
+                }
             }
         }
     }
@@ -973,7 +995,12 @@ function push () {
         if (Array.isArray(parent)) {
             parent.push(value)
         } else {
-            parent[key] = value
+            Object.defineProperty(parent, key, {
+                value,
+                writable: true,
+                enumerable: true,
+                configurable: true,
+            })
         }
     }
 
diff --git a/test/parse.js b/test/parse.js
index d162c5f..35694c1 100644
--- a/test/parse.js
+++ b/test/parse.js
@@ -50,6 +50,13 @@ t.test('parse(text)', t => {
             'parses escaped property names'
         )
 
+        t.strictSame(
+            // eslint-disable-next-line no-proto
+            JSON5.parse('{"__proto__":1}').__proto__,
+            1,
+            'preserves __proto__ property names'
+        )
+
         t.strictSame(
             JSON5.parse('{abc:1,def:2}'),
             {abc: 1, def: 2},
-- 
2.39.2 (Apple Git-143)

