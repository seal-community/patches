From 856afdc62d7c854ba1e157559b29b4c41ca351b7 Mon Sep 17 00:00:00 2001
From: Seal <info@seal.security>
Date: Sun, 2 Jul 2023 12:38:18 +0300
Subject: [PATCH 1/1] Seal Security Hotfix for ejs 2.7.4

This patch fixes:
  CVE-2022-29078
  SNYK-JS-EJS-1049328

For more information see:
  1. https://seal.security
  2. https://github.com/seal-community
  3. https://github.com/mde/ejs/tree/v2.7.4
---
 lib/ejs.js  | 18 +++++++++++++++---
 test/ejs.js | 26 ++++++++++++++++++++++++++
 2 files changed, 41 insertions(+), 3 deletions(-)

diff --git a/lib/ejs.js b/lib/ejs.js
index 51b202e6..3201049f 100755
--- a/lib/ejs.js
+++ b/lib/ejs.js
@@ -63,6 +63,7 @@ var _OPTS_PASSABLE_WITH_DATA = ['delimiter', 'scope', 'context', 'debug', 'compi
 // so we make an exception for `renderFile`
 var _OPTS_PASSABLE_WITH_DATA_EXPRESS = _OPTS_PASSABLE_WITH_DATA.concat('cache');
 var _BOM = /^\uFEFF/;
+var _JS_IDENTIFIER = /^[a-zA-Z_$][0-9a-zA-Z_$]*$/;
 
 /**
  * EJS template function cache. This can be a LRU object from lru-cache NPM
@@ -569,6 +570,9 @@ Template.prototype = {
     var appended = '';
     var escapeFn = opts.escapeFunction;
     var ctor;
+    /** @type {string} */
+    var sanitizedFilename = opts.filename ? JSON.stringify(opts.filename) : 'undefined';
+
 
     if (!this.source) {
       this.generateSource();
@@ -576,12 +580,21 @@ Template.prototype = {
         '  var __output = "";\n' +
         '  function __append(s) { if (s !== undefined && s !== null) __output += s }\n';
       if (opts.outputFunctionName) {
+        if (!_JS_IDENTIFIER.test(opts.outputFunctionName)) {
+          throw new Error('outputFunctionName is not a valid JS identifier.');
+        }
         prepended += '  var ' + opts.outputFunctionName + ' = __append;' + '\n';
       }
+      if (opts.localsName && !_JS_IDENTIFIER.test(opts.localsName)) {
+        throw new Error('localsName is not a valid JS identifier.');
+      }
       if (opts.destructuredLocals && opts.destructuredLocals.length) {
         var destructuring = '  var __locals = (' + opts.localsName + ' || {}),\n';
         for (var i = 0; i < opts.destructuredLocals.length; i++) {
           var name = opts.destructuredLocals[i];
+          if (!_JS_IDENTIFIER.test(name)) {
+            throw new Error(`destructuredLocals[${i}] is not a valid JS identifier.`);
+          }
           if (i > 0) {
             destructuring += ',\n  ';
           }
@@ -600,8 +613,7 @@ Template.prototype = {
     if (opts.compileDebug) {
       src = 'var __line = 1' + '\n'
         + '  , __lines = ' + JSON.stringify(this.templateText) + '\n'
-        + '  , __filename = ' + (opts.filename ?
-        JSON.stringify(opts.filename) : 'undefined') + ';' + '\n'
+        + '  , __filename = ' + sanitizedFilename + ';' + '\n'
         + 'try {' + '\n'
         + this.source
         + '} catch (e) {' + '\n'
@@ -627,7 +639,7 @@ Template.prototype = {
     }
     if (opts.compileDebug && opts.filename) {
       src = src + '\n'
-        + '//# sourceURL=' + opts.filename + '\n';
+        + '//# sourceURL=' + sanitizedFilename + '\n';
     }
 
     try {
diff --git a/test/ejs.js b/test/ejs.js
index fb154221..2d53e4d7 100755
--- a/test/ejs.js
+++ b/test/ejs.js
@@ -1308,3 +1308,29 @@ suite('meta information', function () {
     assert.strictEqual(ejs.name, 'ejs');
   });
 });
+
+suite('identifier validation', function () {
+  test('invalid outputFunctionName', function() {
+    assert.throws(function() {
+      ejs.compile('<p>yay</p>', {outputFunctionName: 'x;console.log(1);x'});
+    }, /outputFunctionName is not a valid JS identifier/)
+  });
+
+  test('invalid localsName', function() {
+    var locals = Object.create(null);
+    assert.throws(function() {
+      ejs.compile('<p>yay</p>', {
+        localsName: 'function(){console.log(1);return locals;}()'});
+    }, /localsName is not a valid JS identifier/)
+  });
+
+  test('invalid destructuredLocals', function() {
+    var locals = {};
+    assert.throws(function() {
+      ejs.compile('<p>yay</p>', {
+        destructuredLocals: [
+          'console.log(1); //'
+        ]});
+    }, /destructuredLocals\[0\] is not a valid JS identifier/)
+  });
+});
\ No newline at end of file
-- 
2.39.2 (Apple Git-143)

